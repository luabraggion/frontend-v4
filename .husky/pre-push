#!/usr/bin/env sh

# 🚀 Pre-push hook: checagens rápidas antes do push
# - Fail-fast e mensagens claras
# - Skip via SKIP_PREPUSH=1
# - Executa type-check e lint incrementais

set -eu

echo "🚀 Executando checagens de pre-push..."

# Permitir pular o hook via variável de ambiente
if [ "${SKIP_PREPUSH:-}" = "1" ]; then
  echo "⏭️  SKIP_PREPUSH=1 — pulando pre-push"
  exit 0
fi

# Garantir que estamos em um repositório Git
if ! git rev-parse --is-inside-work-tree >/dev/null 2>&1; then
  echo "ℹ️  Fora de um repositório Git — nada a fazer"
  exit 0
fi

# Determinar diff contra upstream para contexto do push
# Tenta identificar a branch upstream; fallback para HEAD~1
UPSTREAM_REF=$(git rev-parse --abbrev-ref --symbolic-full-name @{u} 2>/dev/null || echo "")
if [ -n "$UPSTREAM_REF" ]; then
  BASE_RANGE="$UPSTREAM_REF..HEAD"
else
  BASE_RANGE="HEAD~1..HEAD"
fi

CHANGED_TS=$(git diff --name-only $BASE_RANGE -- '*.ts' '*.tsx' || true)
# Apenas arquivos relevantes para ESLint (JS/TS)
CHANGED_ESLINT=$(git diff --name-only $BASE_RANGE -- '*.js' '*.jsx' '*.ts' '*.tsx' '*.mjs' '*.cjs' || true)

# Executar type-check se houver arquivos TS alterados
if [ -n "$CHANGED_TS" ]; then
  echo "🧪 Type-check (arquivos TS alterados detectados)..."
  if [ -x "./node_modules/.bin/tsc" ]; then
    ./node_modules/.bin/tsc --noEmit
  else
    if command -v npx >/dev/null 2>&1; then
      npx --no-install tsc --noEmit 2>/dev/null || npx tsc --noEmit
    else
      echo "❌ tsc não encontrado. Instale as dependências."
      exit 1
    fi
  fi
else
  echo "ℹ️  Nenhuma alteração TS detectada — pulando type-check"
fi

# Executar ESLint apenas nos arquivos JS/TS alterados e existentes
if [ -n "$CHANGED_ESLINT" ]; then
  echo "🔎 ESLint (arquivos JS/TS alterados detectados)..."
  # Construir lista segura de arquivos existentes
  ESLINT_FILES=""
  # IFS em newline para preservar espaços no nome dos arquivos
  IFS='\n'
  for f in $CHANGED_ESLINT; do
    if [ -f "$f" ]; then
      # Envolver em aspas ao invocar
      if [ -z "$ESLINT_FILES" ]; then
        ESLINT_FILES="$f"
      else
        ESLINT_FILES="$ESLINT_FILES\n$f"
      fi
    fi
  done
  unset IFS

  if [ -z "$ESLINT_FILES" ]; then
    echo "ℹ️  Nenhum arquivo JS/TS existente para lint — pulando ESLint"
  else
    # Invocar eslint com lista de arquivos; usar xargs para lidar com quebras de linha de forma segura
    if [ -x "./node_modules/.bin/eslint" ]; then
      printf "%b" "$ESLINT_FILES" | xargs ./node_modules/.bin/eslint --max-warnings=0 --report-unused-disable-directives
    else
      if command -v npx >/dev/null 2>&1; then
        printf "%b" "$ESLINT_FILES" | xargs npx --no-install eslint --max-warnings=0 --report-unused-disable-directives 2>/dev/null \
          || printf "%b" "$ESLINT_FILES" | xargs npx eslint --max-warnings=0 --report-unused-disable-directives
      else
        echo "❌ eslint não encontrado. Instale as dependências."
        exit 1
      fi
    fi
  fi
else
  echo "ℹ️  Nenhuma alteração JS/TS detectada — pulando ESLint"
fi

echo "✅ Pre-push finalizado com sucesso!"
